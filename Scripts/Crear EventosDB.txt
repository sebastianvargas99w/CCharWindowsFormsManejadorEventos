create table Persona(
	Id varchar(30) NOT NULL,
	Tipo varchar(1) not null); -- J o F

alter table Persona
	add constraint pk_Persona
	primary key (Id);

create table PersonaFisica(
	Id varchar(30) NOT NULL,
	Apellido1 varchar(30) NULL,
	Apellido2 varchar(30) NULL,
	Nombre varchar(30) NULL,
	Correo varchar(30) NULL,
	FecNacimiento date NULL,
	Sexo varchar(1) NULL);

alter table PersonaFisica
	add constraint pk_PersonaFisica
	primary key (Id);

create table Sucursal(
	IdSucursal varchar(30) NOT NULL,
	Nombre varchar(30) NOT NULL);

alter table Sucursal
	add constraint pk_Sucursal
	primary key (IdSucursal);

create table PersonaJuridica(
	Id varchar(30) NOT NULL,
	Correo varchar(30) NULL,
	Contacto varchar(30) NULL,
	Nombre varchar(30) NULL);

alter table PersonaJuridica
	add constraint pk_PersonaJuridica
	primary key (Id);

create table Cliente(
	Id varchar(30) NOT NULL,
	IdCliente varchar(30) NOT NULL);

alter table Cliente
	add constraint pk_Cliente
	primary key (IdCliente);

create table Empleado(
	Id varchar(30) NOT NULL,
	IdEmpleado varchar(30) NOT NULL,
	IdEncargado varchar(30) NULL,
	IdSucursal varchar(30) NOT NULL);

alter table Empleado
	add constraint pk_Empleado
	primary key (IdEmpleado);

create table Usuario(
	IdEmpleado varchar(30) NULL,
	Usuario varchar(30) NOT NULL,
	Rol varchar(30) NOT NULL,
	Clave varchar(150) not NULL);

alter table Usuario
	add constraint pk_Usuario
	primary key (Usuario);

create table Telefono(
	Id varchar(30) NOT NULL,
	Tipo varchar(30) NOT NULL,
	Numero varchar(30) NULL);

alter table Telefono
	add constraint pk_Telefono
	primary key (Id,Tipo);

create table Proveedor(
	Id varchar(30) NOT NULL,
	IdProveedor varchar(30) NOT NULL);

alter table Proveedor
	add constraint pk_Proveedor
	primary key (IdProveedor);

create table Evento(
	IdEvento varchar(30) NOT NULL,
	IdEmpleado varchar(30) NOT NULL,
	IdCliente varchar(30) NOT NULL,
	Nombre varchar(30) NULL,
	Tipo varchar(30) NULL,
	AsistenciaTotal int(10) NULL,
	AsistenciaEsperada int(10) NULL,
	Presupuesto int(10) NULL,
	Fecha date NULL,
	CostoTotal int(10) NULL,
	Descripcion varchar(30) NULL);

alter table Evento
	add constraint pk_Evento
	primary key (IdEvento);

create table Factura(
	IdFactura varchar(30) NOT NULL,
	IdEvento varchar(30) NOT NULL,
	IdCliente varchar(30) NOT NULL,
	Fecha date not NULL,
	Monto int(10) NULL);

alter table Factura
	add constraint pk_Factura
	primary key (IdFactura);

create table LineaFactura(
	IdFactura varchar(30) NOT NULL,
	IdLineaFactura varchar(30) NOT NULL,
	IdServicio varchar(30) NOT NULL,
	Cantidad int(10) not NULL);

alter table LineaFactura
	add constraint pk_LineaFactura
	primary key (IdFactura,IdLineaFactura);

	
create table OrdenCompra(
	IdOrdenCompra varchar(30) NOT NULL,
	IdEvento varchar(30) NOT NULL,
	IdProveedor varchar(30) NOT NULL,
	Fecha date not NULL,
	Monto int(10) NULL);

alter table OrdenCompra
	add constraint pk_OrdenCompra
	primary key (IdOrdenCompra);

create table LineaOrden(
	IdOrdenCompra varchar(30) NOT NULL,
	IdLineaOrden varchar(30) NOT NULL,
	IdServicio varchar(30) NOT NULL,
	Cantidad int(10) not NULL);

alter table LineaOrden
	add constraint pk_LineaOrden
	primary key (IdOrdenCompra,IdLineaOrden);

create table Servicio(
	IdServicio varchar(30) NOT NULL,
	IdProveedor varchar(30) NOT NULL,
	Nombre varchar(30) NULL,
	Detalle varchar(100) NULL,
	Precio int(10) NULL,
	Costo int(10) NULL);

alter table Servicio
	add constraint pk_Servicio
	primary key (IdServicio);
 
create table Pais(
	CodPais varchar(5) NOT NULL,
	Descripcion varchar(50) NULL);

alter table Pais
 add constraint pk_Pais
 primary key (CodPais);
			
create table Provincia(
	CodPais varchar(5) NOT NULL,
	CodProvincia varchar(5) NOT NULL,
	Descripcion varchar(50) NULL);
	
alter table Provincia
 add constraint pk_Provincia
 primary key (CodPais, CodProvincia);
	 
create table Canton(
	CodPais varchar(5) NOT NULL,
	CodProvincia varchar(5) NOT NULL,
	CodCanton varchar(5) NOT NULL,
	Descripcion varchar(50) NULL);

alter table Canton
 add constraint pk_Canton
 primary key (CodPais, CodProvincia,CodCanton);

create table DireccionSucursal(
	IdSucursal varchar(30) NOT NULL,
	CodPais varchar(5) NOT NULL,
	CodProvincia varchar(5) NOT NULL,
	CodCanton varchar(5) NOT NULL,
	Descripcion varchar(200) NULL);
	
alter table DireccionSucursal
 add constraint pk_DireccionSucursal
 primary key (IdSucursal);
	
create table Direccion(
	Id varchar(30) NOT NULL,
	Tipo varchar(30) NOT NULL,
	CodPais varchar(5) NOT NULL,
	CodProvincia varchar(5) NOT NULL,
	CodCanton varchar(5) NOT NULL,
	Descripcion varchar(200) NULL);
	
alter table Direccion
 add constraint pk_Direccion
 primary key (Id);

-- Foreign Keys


alter table PersonaFisica
add constraint fk_PersonaFisica_Persona
foreign key (Id)
references Persona (Id);

alter table PersonaJuridica
add constraint fk_PersonaJuridica_Persona
foreign key (Id)
references Persona (Id);

alter table Cliente
add constraint fk_Cliente_Persona
foreign key (Id)
references Persona (Id);

alter table Empleado
add constraint fk_Empleado_PersonaFisica
foreign key (Id)
references PersonaFisica (Id);

alter table Empleado
add constraint fk_Empleado_Sucursal
foreign key (IdSucursal)
references Sucursal (IdSucursal);

alter table Telefono
add constraint fk_Telefono_Persona
foreign key (Id)
references Persona (Id)

alter table Proveedor
add constraint fk_Proveedor_Persona
foreign key (Id)
references Persona (Id)

alter table Evento
add constraint fk_Evento_Cliente
foreign key (IdCliente)
references Cliente (IdCliente);

alter table Evento
add constraint fk_Evento_Empleado
foreign key (IdEmpleado)
references Empleado (IdEmpleado);

alter table Factura
add constraint fk_Factura_Cliente
foreign key (IdCliente)
references Cliente (IdCliente);

alter table Factura
add constraint fk_Factura_Evento
foreign key (IdEvento)
references Evento (IdEvento);

alter table LineaFactura
add constraint fk_LineaFactura_Servicio
foreign key (IdServicio)
references Servicio (IdServicio);

alter table LineaFactura
add constraint fk_LineaFactura_Factura
foreign key (IdFactura)
references Factura (IdFactura);

alter table OrdenCompra
add constraint fk_OrdenCompra_Proveedor
foreign key (IdProveedor)
references Proveedor (IdProveedor);

alter table OrdenCompra
add constraint fk_OrdenCompra_Evento
foreign key (IdEvento)
references Evento (IdEvento);

alter table LineaOrden
add constraint fk_LineaOrden_Servicio
foreign key (IdServicio)
references Servicio (IdServicio);

alter table LineaOrden
add constraint fk_LineaOrden_OrdenCompra
foreign key (idOrdenCompra)
references OrdenCompra (IdOrdenCompra);

alter table Servicio
add constraint fk_Servicio_Proveedor
foreign key (IdProveedor)
references Proveedor (IdProveedor);

alter table Provincia
add constraint fk_Provincia_Pais
foreign key (CodPais)
references Pais (CodPais);

alter table Canton
add constraint fk_Canton_Provincia
foreign key (CodPais, CodProvincia)
references Provincia (CodPais,CodProvincia);

alter table Direccion
add constraint fk_Direccion_Persona
foreign key (Id)
references Persona (Id);

alter table DireccionSucursal
add constraint fk_DireccionSucursal_Sucursal
foreign key (IdSucursal)
references Sucursal (IdSucursal);

alter table DireccionSucursal
add constraint fk_DireccionSucursal_Canton
foreign key (CodPais, CodProvincia, CodCanton)
references Canton (CodPais, CodProvincia, CodCanton);

alter table Direccion
add constraint fk_Direccion_Canton
foreign key (CodPais, CodProvincia, CodCanton)
references Canton (CodPais, CodProvincia, CodCanton);

--- Triggers para Auditoria

create table Auditoria(
	Tabla varchar(30),
	Usuario varchar(30),
	Fecha date,
	Operacion varchar(10),
	ColumnaMod varchar (30),
	ValorViejo varchar(30),
	ValorNuevo varchar(30));

create trigger AuditaEvento
	on Evento
	after insert,delete,update
	as
		begin
		declare 
		@Tabla varchar(30),
		@Usuario varchar(30),
		@Fecha date,
		@Operacion varchar(10),
		@ColumnaMod varchar(30),
		@ValorViejo varchar(30),
		@ValorNuevo varchar(30)
		set @Tabla = 'Evento' 
		if exists(select * from inserted) and not exists(select * from deleted)
		begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Insertar'
			set @ValorNuevo = (select idevento from inserted);
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ValorNuevo)
			values (@Tabla, @Usuario, @Fecha, @Operacion, @ValorNuevo)
		end
		else if not exists(select * from inserted) and exists(select * from deleted)
		begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Borrar'
			set @ValorViejo = (select idevento from deleted);
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ValorViejo)
			values (@Tabla,@Usuario, @Fecha, @Operacion,@ValorViejo)
		end
		else if exists(select * from inserted) and exists(select * from deleted)
		begin
			if (select fecha from inserted)<>(select fecha from deleted)
			begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Modificar'
			set @ColumnaMod = 'Fecha'
			set @ValorViejo = (select cast(fecha as varchar) from deleted)
			set @ValorNuevo = (select CAST(fecha as varchar) from inserted)
			insert into Auditoria (Tabla,Usuario, Fecha, Operacion, ColumnaMod, ValorViejo, ValorNuevo)
			values (@Tabla,@Usuario, @Fecha, @Operacion, @ColumnaMod, @ValorViejo, @ValorNuevo)
			end
			if (select nombre from inserted)<>(select nombre from deleted)
			begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Modificar'
			set @ColumnaMod = 'Nombre'
			set @ValorViejo = (select nombre from deleted)
			set @ValorNuevo = (select nombre from inserted)
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ColumnaMod, ValorViejo, ValorNuevo)
			values (@Tabla,@Usuario, @Fecha, @Operacion, @ColumnaMod, @ValorViejo, @ValorNuevo)
			end
			if (select presupuesto from inserted)<>(select presupuesto from deleted)
			begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Modificar'
			set @ColumnaMod = 'Presupuesto'
			set @ValorViejo = (select presupuesto from deleted)
			set @ValorNuevo = (select presupuesto from inserted)
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ColumnaMod, ValorViejo, ValorNuevo)
			values (@Tabla, @Usuario, @Fecha, @Operacion, @ColumnaMod, @ValorViejo, @ValorNuevo)
			end
			if (select costototal from inserted)<>(select costototal from deleted)
			begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Modificar'
			set @ColumnaMod = 'CostoTotal'
			set @ValorViejo = (select cast(costototal as varchar) from deleted)
			set @ValorNuevo = (select CAST(costototal as varchar) from inserted)
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ColumnaMod, ValorViejo, ValorNuevo)
			values (@Tabla, @Usuario, @Fecha, @Operacion, @ColumnaMod, @ValorViejo, @ValorNuevo)
			end
		end
	end;

	create trigger AuditaFactura
	on Factura
	after insert,delete,update
	as
		begin
		declare 
		@Tabla varchar(30),
		@Usuario varchar(30),
		@Fecha date,
		@Operacion varchar(10),
		@ColumnaMod varchar(30),
		@ValorViejo varchar(30),
		@ValorNuevo varchar(30)
		set @Tabla = 'Factura' 
		if exists(select * from inserted) and not exists(select * from deleted)
		begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Insertar'
			set @ValorNuevo = (select idfactura from inserted);
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ValorNuevo)
			values (@Tabla, @Usuario, @Fecha, @Operacion, @ValorNuevo)
		end
		else if not exists(select * from inserted) and exists(select * from deleted)
		begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Borrar'
			set @ValorViejo = (select idfactura from deleted);
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ValorViejo)
			values (@Tabla,@Usuario, @Fecha, @Operacion,@ValorViejo)
		end
		else if exists(select * from inserted) and exists(select * from deleted)
		begin
			if (select fecha from inserted)<>(select fecha from deleted)
			begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Modificar'
			set @ColumnaMod = 'Fecha'
			set @ValorViejo = (select cast(fecha as varchar) from deleted)
			set @ValorNuevo = (select CAST(fecha as varchar) from inserted)
			insert into Auditoria (Tabla,Usuario, Fecha, Operacion, ColumnaMod, ValorViejo, ValorNuevo)
			values (@Tabla,@Usuario, @Fecha, @Operacion, @ColumnaMod, @ValorViejo, @ValorNuevo)
			end
			if (select monto from inserted)<>(select monto from deleted)
			begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Modificar'
			set @ColumnaMod = 'Monto'
			set @ValorViejo = (select cast(monto as varchar) from deleted)
			set @ValorNuevo = (select CAST(monto as varchar) from inserted)
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ColumnaMod, ValorViejo, ValorNuevo)
			values (@Tabla, @Usuario, @Fecha, @Operacion, @ColumnaMod, @ValorViejo, @ValorNuevo)
			end
		end
	end;

	create trigger AuditaOrdenCompra
	on OrdenCompra
	after insert,delete,update
	as
		begin
		declare 
		@Tabla varchar(30),
		@Usuario varchar(30),
		@Fecha date,
		@Operacion varchar(10),
		@ColumnaMod varchar(30),
		@ValorViejo varchar(30),
		@ValorNuevo varchar(30)
		set @Tabla = 'OrdenCompra' 
		if exists(select * from inserted) and not exists(select * from deleted)
		begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Insertar'
			set @ValorNuevo = (select idordencompra from inserted);
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ValorNuevo)
			values (@Tabla, @Usuario, @Fecha, @Operacion, @ValorNuevo)
		end
		else if not exists(select * from inserted) and exists(select * from deleted)
		begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Borrar'
			set @ValorViejo = (select idordencompra from deleted);
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ValorViejo)
			values (@Tabla,@Usuario, @Fecha, @Operacion,@ValorViejo)
		end
		else if exists(select * from inserted) and exists(select * from deleted)
		begin
			if (select fecha from inserted)<>(select fecha from deleted)
			begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Modificar'
			set @ColumnaMod = 'Fecha'
			set @ValorViejo = (select cast(fecha as varchar) from deleted)
			set @ValorNuevo = (select CAST(fecha as varchar) from inserted)
			insert into Auditoria (Tabla,Usuario, Fecha, Operacion, ColumnaMod, ValorViejo, ValorNuevo)
			values (@Tabla,@Usuario, @Fecha, @Operacion, @ColumnaMod, @ValorViejo, @ValorNuevo)
			end
			if (select monto from inserted)<>(select monto from deleted)
			begin
			set @Usuario = system_user
			set @Fecha = getdate()
		    set @Operacion = 'Modificar'
			set @ColumnaMod = 'Monto'
			set @ValorViejo = (select cast(monto as varchar) from deleted)
			set @ValorNuevo = (select CAST(monto as varchar) from inserted)
			insert into Auditoria (Tabla, Usuario, Fecha, Operacion, ColumnaMod, ValorViejo, ValorNuevo)
			values (@Tabla, @Usuario, @Fecha, @Operacion, @ColumnaMod, @ValorViejo, @ValorNuevo)
			end
		end
	end;